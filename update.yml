#добавить опись перменных
- name: massege
  hosts: APP_MASTER
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  tasks:
    - name: "Ansible | Print multiple variable"
      debug:
          msg:
            - "Обновление CM: {{cm}}"
            - "Обновление MA: {{ma}}"
            - "Обновление MAR: {{mar}}"
            - "Перезагрузка АРтемиса: {{artemis}}"
            - "Игнорирование дампа CM5/6: {{ignor_cm6_dump}}"
            - "Игнорирование дампа CMJ: {{ignor_cmj_dump}}"
            - "Игнорирование дампа MA: {{ignor_ma_dump}}"
            - "Игнорирование дампа MAR: {{ignor_mar_dump}}"
            - "имя службы на мастере wf: {{ name_servise_wf_claster_mansger }}"
            - "имя службы на пользовательск их WF: {{ name_servise_wf }}"
            - "имя службы wildfly для менджера агентов: {{ name_servise_wf_ma }}"
            - "имя службв wildfly для mar: {{ name_servise_mar }}"
            - "юзер под которым снимаем дамп: {{ user_posgres }}"
            - "имя базы cm6: {{ dbcm6 }}"
            - "имя базы cmj: {{ dbcmj }}"
            - "имя базы ma: {{ dbma }}"
            - "имя базы mar: {{ dbmar }}"
            - "порт базы для cm6 {{ cm6_db_settings_default_PORT }}"
            - "логин от postgres cm6: {{ cm6_db_settings_default_USER }}"
            - "кол-во потоков для cm6: {{ cm6_db_settings_default_JOBS }}"
            - "куда снимаем дамп см6: {{ CM5_PG_DIR }}"
            - "порт базы для cmj {{ cmj_db_settings_default_PORT }}"
            - "логин от postgres cmj: {{ cmj_db_settings_default_USER }}"
            - "кол-во потоков для cmj: {{ cmj_db_settings_default_JOBS }}"
            - "куда снимаем дамп смj: {{ CMJ_PG_DIR }}"
            - "от куда качаем ear: {{download_ear_home}}"
            - "куда качаем ear: {{WF_DIR_EAR}}"
            - "сервер с коротого заираем ярник и нга котором есть деректория из перменой download_ear_home {{delegate_IP_EAR}}"

#tasks:
#- fail: msg="The variable 'bar' is empty"
#  when: bar|length == 0

#- shell: echo "The variable 'foo' is not empty": '{{ foo }}'
#  when: foo|length > 0

- name: Wildfly master stop
  hosts: APP_MASTER
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy: "{{cm}}"
  tasks:
    - name: wf stop
      service: name={{name_servise_wf_claster_mansger}} state=stopped
      when: destroy

    - name: wf igonor
      debug:
        msg:
          - "Отсановка игнорируеться"
      when: not destroy

- name: Wildfly slave stop
  hosts: APP
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy: "{{cm}}"
  tasks:
    - name: wf stop
      service: name={{name_servise_wf}} state=stopped

    - name: wf igonor
      debug:
        msg:
          - "Отсановка игнорируеться"
      when: not destroy

- name: ma stop
  hosts: MA
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy_ma: "{{ma}}"
  tasks:
    - name: ma stop
      service: name={{name_servise_wf_ma}} state=stopped
      when: destroy_ma

    - name: wf_ma igonor
      debug:
        msg:
          - "Отсановка ma игнорируеться"
      when: not destroy_ma

- name: mar stop
  hosts: MAR
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy_mar: "{{mar}}"
  tasks:
    - name: mar stop
      service: name={{name_servise_mar}} state=stopped
      when: destroy_mar

    - name: wf_mar igonor
      debug:
        msg:
          - "Отсановка mar игнорируеться"
      when: not destroy_mar

- name: Artemis stop
  hosts: AREMIS
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy_Artemis: "{{artemis}}"
  tasks:
    - name: artemis stop
      service: name={{artemis_servise}} state=stopped
      when: destroy_Artemis

    - name: wf_mar igonor
      debug:
        msg:
          - "Отсановка Artemis игнорируеться"
      when: not destroy_Artemis

- name: Artemis start
  hosts: AREMIS
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy_Artemis: "{{artemis}}"
  tasks:
    - name: artemis stop
      service: name={{artemis_servise}} state=started
      when: destroy_Artemis

    - name: wf_mar igonor
      debug:
        msg:
          - "Отсановка Artemis игнорируеться"
      when: not destroy_Artemis

- name: start pg_dump cm6
  hosts: APP_MASTER
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy: "{{cm}}"
    ignor_cm6: "{{ignor_cm6_dump}}"


  tasks:
    - name: PG_DUMP_CM5
      become: yes
      become_user: "{{user_posgres}}"
      shell: "pg_dump --port={{ cm6_db_settings_default_PORT }} --username='{{ cm6_db_settings_default_USER  }}' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs='{{ cm6_db_settings_default_JOBS }}' --dbname='{{ dbcm6 }}' --file '{{CM5_PG_DIR}}/CM5-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}'"
      when: destroy and not ignor_cm6

    - name: PG_DUMP_CM5 igonor
      debug:
        msg:
          - "Создание дампа для Cm6 игнорируется"
      when: not destroy or ignor_cm6

- hosts: BD_CMJ
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy: "{{cm}}"
    ignor_cmj: "{{ignor_cmj_dump}}"

  tasks:
    - name: PG_DUMP_CMJ
      become: yes
      become_user: "{{user_posgres}}"
      shell: "pg_dump --port={{ cmj_db_settings_default_PORT }} --username'{{ cmj_db_settings_default_USER  }}' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs='{{ cmj_db_settings_default_JOBS }}' --dbname='{{ dbcmj }}' --file '{{CMJ_PG_DIR}}/CMJ-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}'"
      when: destroy and not ignor_cmj

    - name: PG_DUMP_CMJ igonor
      debug:
        msg:
          - "Создание дампа для CMJ игнорируется"
      when: not destroy or ignor_cmj

- name: start pg_dump MA
  hosts: BD_MA
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy_mar: "{{ma}}"
    ignor_ma: "{{ignor_ma_dump}}"

  tasks:
    - name: PG_DUMP_MA
      become: yes
      become_user: "{{user_posgres}}"
      shell: "pg_dump --port={{ ma_db_settings_default_PORT }} --username'{{ ma_db_settings_default_USER  }}' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs='{{ ma_db_settings_default_JOBS }}' --dbname='{{ dbma }}' --file '{{CM5_PG_DIR}}/MA-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}'"
      when: destroy_ma and not ignor_ma

    - name: PG_DUMP_MA igonor
      debug:
        msg:
          - "Создание дампа для MA игнорируется"
      when: not destroy_ma or ignor_ma

- name: start pg_dump MAR
  hosts: BD_MAR
  user: root
  vars_files: ~/ansible/common/vars/global.yml
  vars:
    destroy_mar: "{{mar}}"
    ignor_mar: "{{ignor_mar_dump}}"

  tasks:
    - name: PG_DUMP_MAR
      become: yes
      become_user: "{{user_posgres}}"
      shell: "pg_dump --port={{ mar_db_settings_default_PORT }} --username'{{ mar_db_settings_default_USER  }}' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs='{{ mar_db_settings_default_JOBS }}' --dbname='{{ dbmar }}' --file '{{CM5_PG_DIR}}/MAr-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}'"
      when: destroy_mar and not ignor_mar

    - name: PG_DUMP_MA igonor
      debug:
        msg:
          - "Создание дампа для MAR игнорируется"
      when: not destroy_mar or ignor_mar

#ищем ear если он есть то обновляем его мастер
- name: Update WF_master
  hosts: APP_MASTER
  user: root
  vars:
    ear: "{{ lookup('pipe', 'ls -1 {{download_ear}}/*.ear') }}"
    ear_dir: "{{ lookup('pipe', 'ls -1 {{WF_DIR}}/*.ear') }}"
    download_ear: "{{download_ear_home}}"
    WF_DIR: "{{WF_DIR_EAR}}"
    delegate_IP: "{{delegate_IP_EAR}}"
    url_master: "{{url_master_cm5div6}}"

  tasks:

    - name: Check if the ear.
      command: "/usr/bin/test -e {{ear}}"
      ignore_errors: True
      register: ear_exists

    - name: Clean up.
      shell: "/bin/rm -rf {{WF_DIR}}/*.ear"
      when: ear_exists.rc != 0

    - name: Download ear.
      synchronize:
        src: "{{ear}}"
        dest: "{{WF_DIR}}/"
      delegate_to: "{{delegate_IP}}"
      when: ear_exists.rc != 0

    - name: wf start
      service: name=wildfly state=started
      when: ear_exists.rc != 0

    - name: "wait for cm5div6 to come up"
      uri:
        url: "{{url_master}}"
        status_code: 200
      register: result
      until: result.status == 200
      retries: 1500
      delay: 1
      when: ear_exists.rc != 0